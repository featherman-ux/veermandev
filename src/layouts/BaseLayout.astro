---
// src/layouts/BaseLayout.astro
import Header from '../components/layout/Header.astro';
import Footer from '../components/layout/Footer.astro';
import { getLangFromUrl } from '../i18n/utils';
import '../styles/global.css';

interface Props {
  title: string;
  description: string;
}

const { title, description }: Props = Astro.props;
const lang = getLangFromUrl(Astro.url);

const alternatePath = Astro.url.pathname.startsWith('/en') 
  ? Astro.url.pathname.replace('/en', '/nl')
  : Astro.url.pathname.replace('/nl', '/en');

const alternateUrl = Astro.site 
  ? new URL(alternatePath, Astro.site).href 
  : alternatePath;

const canonicalUrl = Astro.site 
  ? new URL(Astro.url.pathname, Astro.site).href 
  : Astro.url.pathname;
---
<!DOCTYPE html>
<html lang={lang} class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <meta name="robots" content="index, follow" />
    <meta name="author" content="VeermanDevelopment" />
    <meta name="theme-color" content="#3b82f6" />
    <title>{title}</title>

    {/* Preload critical resources */}
    <link rel="dns-prefetch" href="https://assets.calendly.com" />
    <link rel="dns-prefetch" href="https://formspree.io" />

    {/* Critical CSS: minimal base to prevent FOUC */}
    <style is:inline>
      :root { --bg-dark: #0B0C10; --text-dark: #E5E7EB; --bg-light: #F9FAFB; --text-light: #111827; }
      html { scroll-behavior: smooth; }
      body { background: var(--bg-light); color: var(--text-light); }
      .dark body, body.dark { background: var(--bg-dark); color: var(--text-dark); }
      a { text-decoration: none; }
    </style>
    <!-- Preload fonts -->
    <link rel="preload" href="/fonts/inter-v20-latin-regular.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="/fonts/inter-v20-latin-600.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="/fonts/inter-v20-latin-700.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="/fonts/poppins-v23-latin-600.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="/fonts/poppins-v23-latin-700.woff2" as="font" type="font/woff2" crossorigin>

    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <link rel="icon" href="/favicon 48x48.svg" type="image/svg+xml" sizes="48x48" />
    <link rel="icon" href="/favicon (180 x 180 px).svg" type="image/svg+xml" sizes="180x180" />
    <link rel="icon" href="/favicon (512 x 512 px).svg" type="image/svg+xml" sizes="512x512" />
    <link rel="apple-touch-icon" href="/favicon (180 x 180 px).svg" sizes="180x180" />
    <link rel="mask-icon" href="/favicon.svg" color="#0A84FF" />

    <link rel="canonical" href={canonicalUrl} />
    <link rel="alternate" hreflang={lang} href={canonicalUrl} />
    <link rel="alternate" hreflang={lang === 'nl' ? 'en' : 'nl'} href={alternateUrl} />
    
    {/* Open Graph / Facebook */}
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:locale" content={lang === 'nl' ? 'nl_NL' : 'en_US'} />
    
    {/* Twitter */}
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalUrl} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    {/* Structured Data (basic) */}
    {(() => {
      const path = Astro.url.pathname;
      let json: any = null;
      if (path.includes('/services')) {
        json = {
          '@context': 'https://schema.org',
          '@type': 'Service',
          name: 'Website packages',
          provider: { '@type': 'Organization', name: 'VeermanDevelopment' },
          areaServed: 'Netherlands',
          offers: { '@type': 'Offer', priceCurrency: 'EUR' }
        };
      } else if (path.includes('/portfolio')) {
        json = {
          '@context': 'https://schema.org',
          '@type': 'ItemList',
          name: 'Portfolio',
          itemListElement: [
            { '@type': 'ListItem', position: 1, url: canonicalUrl }
          ]
        };
      }
      return json ? (
        <script is:inline type="application/ld+json" set:html={JSON.stringify(json)}></script>
      ) : null;
    })()}
  </head>
  <body class="bg-background-light text-text-light dark:bg-background-dark dark:text-text-dark font-sans leading-relaxed">
    <Header />

    <main id="main-content" class="min-h-screen px-4 md:px-8 pt-6 md:pt-8">
      <slot />
    </main>

    <Footer />

    <script is:inline type="module">
      if (typeof window !== 'undefined') {
        const applyTheme = (theme) => document.documentElement.classList.toggle('dark', theme === 'dark');

        try {
          const stored = localStorage.getItem('theme');
          if (stored) {
            applyTheme(stored);
          } else {
            applyTheme(window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
          }

          if (window.matchMedia) {
            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
              const stored = localStorage.getItem('theme');
              if (!stored) applyTheme(e.matches ? 'dark' : 'light');
            });
          }
        } catch (e) {
          // Fail silently if localStorage is blocked
        }
      }
    </script>
  </body>
</html>
