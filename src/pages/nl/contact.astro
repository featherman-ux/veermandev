---
import BaseLayout from '../../layouts/BaseLayout.astro';
import HeroSection from '../../components/sections/HeroSection.astro';
import TypewriterText from '../../components/ui/TypewriterText.astro';

const pageTitle = "Laten We Samen Iets Geweldigs Bouwen | VeermanDevelopment";
const pageDescription = "Klaar om je bedrijf te transformeren met een hoogwaardige website? Neem contact op voor een gratis ori√´ntatiegesprek. We reageren binnen √©√©n werkdag.";
---

<BaseLayout title={pageTitle} description={pageDescription}>
<!-- ENHANCED HERO with Terminal Typing Effect -->
<HeroSection 
  description="Plan een gratis ori√´ntatiegesprek of stuur ons een bericht. We nemen binnen √©√©n werkdag contact met je op met inzichten en vervolgstappen voor je project."
  trustSignals={["‚ö° 24-uur respons", "üí¨ Vrijblijvend advies", "üéØ Maatstrategie inbegrepen"]}
>
  Plan je gesprek
  <br class="hidden sm:block" />
  <TypewriterText 
    words={["Binnen 24 uur reactie", "Persoonlijk contact", "Geen verplichtingen"]}
    className="text-primary"
    initialText="Binnen 24 uur reactie"
    cursorClass="cursor"
  />
</HeroSection>

<!-- ENHANCED CONTACT FORM with Realistic Form Interactions -->
<section class="contact-form-section py-16 px-4 reveal-section">
<div class="max-w-6xl mx-auto">
<div class="grid md:grid-cols-2 gap-12">
<!-- ENHANCED CALENDLY SECTION -->
<div class="calendar-section bg-card-light dark:bg-card-dark rounded-xl p-4 sm:p-8 shadow-lg hover-lift">
<div class="text-center mb-8">
<div class="w-16 h-16 bg-primary text-black rounded-full flex items-center justify-center text-2xl mx-auto mb-4 pulse-animation">üìÖ</div>
<h2 class="font-heading font-bold text-2xl mb-4 text-center">Plan Je Gesprek</h2>
<p class="opacity-80 mb-6 text-center">
<strong class="text-primary">30 minuten die je bedrijf kunnen transformeren.</strong><br>
We analyseren je doelen en identificeren mogelijkheden. Geen verkoopdruk, alleen inzichten
</p>
</div>
<div class="calendly-container relative overflow-hidden rounded-lg">
<div
class="calendly-inline-widget"
data-url="https://calendly.com/contact-veermandev/30min?hide_event_type_details=1&primary_color=0a84ff&hide_gdpr_banner=1"
style="width:100%;height:600px;"
></div>
<div class="calendar-shimmer absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent transform -skew-x-12 animate-shimmer pointer-events-none"></div>
</div>
<script is:inline type="text/javascript" src="https://assets.calendly.com/assets/external/widget.js" async defer></script>
</div>

<!-- ENHANCED CONTACT FORM -->
<div class="contact-form bg-card-light dark:bg-card-dark rounded-xl p-4 sm:p-8 shadow-lg hover-lift">
<div class="text-center mb-8">
<div class="w-16 h-16 bg-primary text-black rounded-full flex items-center justify-center text-2xl mx-auto mb-4 pulse-animation">‚úâÔ∏è</div>
<h2 class="font-heading font-bold text-2xl mb-4 text-center">Stuur Ons een Bericht</h2>
<p class="opacity-80 mb-4 text-center">
Voorkeur voor e-mail? Vertel ons over je project en we nemen binnen 24 uur contact op met een maatvorstel.
</p>
</div>

<form
id="contact-form"
action="https://formspree.io/f/xdklqakn"
method="POST"
class="space-y-6"
data-csrf-token=""
novalidate
>
<!-- Enhanced Name Field -->
<div class="form-group">
<label for="name" class="block text-sm font-medium mb-2 form-label">
Volledige Naam *
</label>
<div class="input-container relative">
<input
type="text"
id="name"
name="name"
placeholder="Je volledige naam"
class="form-input w-full p-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
required
aria-required="true"
aria-describedby="name-error"
autocomplete="name"
/>
<div class="input-underline absolute bottom-0 left-0 h-0.5 bg-primary transform scale-x-0 transition-transform duration-300"></div>
<div id="name-error" class="error-message text-red-500 text-sm mt-1 hidden" role="alert" aria-live="polite"></div>
</div>
</div>
<!-- Enhanced Email Field -->
<div class="form-group">
<label for="email" class="block text-sm font-medium mb-2 form-label">
E-mailadres *
</label>
<div class="input-container relative">
<input
type="email"
id="email"
name="email"
placeholder="jij@bedrijf.nl"
class="form-input w-full p-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
required
aria-required="true"
aria-describedby="email-error"
autocomplete="email"
/>
<div class="input-underline absolute bottom-0 left-0 h-0.5 bg-primary transform scale-x-0 transition-transform duration-300"></div>
<div id="email-error" class="error-message text-red-500 text-sm mt-1 hidden" role="alert" aria-live="polite"></div>
</div>
</div>
<!-- Enhanced Company Field -->
<div class="form-group">
<label for="company" class="block text-sm font-medium mb-2 form-label">
Bedrijf/Onderneming
</label>
<div class="input-container relative">
<input
type="text"
id="company"
name="company"
placeholder="Je bedrijfsnaam"
class="form-input w-full p-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
/>
<div class="input-underline absolute bottom-0 left-0 h-0.5 bg-primary transform scale-x-0 transition-transform duration-300"></div>
</div>
</div>
<!-- Enhanced Message Field -->
<div class="form-group">
<label for="message" class="block text-sm font-medium mb-2 form-label">
Vertel Ons Over Je Project *
</label>
<div class="input-container relative">
<textarea
id="message"
name="message"
placeholder="Wat zijn je belangrijkste bedrijfsdoelen? Welke uitdagingen veroorzaakt je huidige website? Welke resultaten wil je zien?"
class="form-input w-full p-4 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
rows="6"
required
aria-required="true"
aria-describedby="message-error"
></textarea>
<div class="input-underline absolute bottom-0 left-0 h-0.5 bg-primary transform scale-x-0 transition-transform duration-300"></div>
<div id="message-error" class="error-message text-red-500 text-sm mt-1 hidden" role="alert" aria-live="polite"></div>
</div>
</div>
<!-- Enhanced Submit Button -->
<button
type="submit"
class="submit-btn w-full bg-primary text-black font-semibold px-6 py-4 rounded-lg text-lg hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary transition-all transform hover:scale-[1.02] relative overflow-hidden group"
>
<span class="relative z-10">Verstuur Projectdetails</span>
<div class="button-shine absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent transform -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-700"></div>
<div class="button-ripple absolute inset-0 bg-white/20 transform scale-0 rounded-full"></div>
</button>
</form>

<script is:inline>
  (function () {
    const form = document.getElementById('contact-form');
    if (!(form instanceof HTMLFormElement)) return;

    form.addEventListener('submit', (event) => {
      const nameInput = document.getElementById('name');
      const emailInput = document.getElementById('email');
      const messageInput = document.getElementById('message');

      if (!(nameInput instanceof HTMLInputElement)) return;
      if (!(emailInput instanceof HTMLInputElement)) return;
      if (!(messageInput instanceof HTMLTextAreaElement)) return;

      const controls = {
        name: nameInput,
        email: emailInput,
        message: messageInput
      };

      Object.values(controls).forEach((control) => control.removeAttribute('aria-invalid'));

      const emailRe = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      const sanitize = (value) => value.replace(/<[^>]*>/g, '').replace(/javascript:/gi, '').trim();

      const errors = [];
      if (!controls.name.value || controls.name.value.trim().length < 2) errors.push('name');
      if (!emailRe.test(controls.email.value)) errors.push('email');
      if (!controls.message.value || sanitize(controls.message.value).length < 10) errors.push('message');

      if (errors.length) {
        event.preventDefault();
        errors.forEach((key) => {
          const control = controls[key];
          if (control) control.setAttribute('aria-invalid', 'true');
        });
        return;
      }

      controls.name.value = sanitize(controls.name.value);
      controls.message.value = sanitize(controls.message.value);
    });
  })();
</script>

<!-- Enhanced Success Message -->
<div id="success-message" class="hidden mt-6 p-6 border border-green-500 bg-green-50 dark:bg-green-900/20 rounded-lg success-animation">
<div class="flex items-center gap-3 mb-2">
<div class="success-icon w-6 h-6 bg-green-500 text-white rounded-full flex items-center justify-center text-sm">‚úì</div>
<h3 class="font-heading text-xl text-green-800 dark:text-green-300">Bericht Verzonden!</h3>
</div>
<p class="text-green-700 dark:text-green-300">
Je bericht is succesvol verzonden. We nemen binnen √©√©n werkdag contact met je op
met inzichten en vervolgstappen voor je project.
</p>
</div>
</div>
</div>
</div>
</section>

<!-- ENHANCED CONTACT INFO with Hover Effects -->
<section class="contact-info-section py-16 px-4 bg-card-light dark:bg-card-dark reveal-section">
<div class="max-w-4xl mx-auto">
<div class="text-center mb-12">
<h2 class="font-heading font-bold text-4xl mb-4 gradient-text">Neem Contact Op</h2>
<p class="text-lg opacity-80">Meerdere manieren om je reis te beginnen</p>
</div>
<div class="grid md:grid-cols-3 gap-8">
<div class="contact-method text-center p-6 group hover-lift">
<div class="method-icon w-16 h-16 bg-primary/20 text-primary rounded-lg flex items-center justify-center text-2xl mx-auto mb-4 group-hover:bg-primary group-hover:text-black transition-all duration-300 transform group-hover:scale-110">
üìß
</div>
<h3 class="text-xl font-semibold mb-3 group-hover:text-primary transition-colors duration-300">E-mail</h3>
<p class="opacity-80 mb-2 group-hover:opacity-100 transition-opacity duration-300">contact@veermandev.nl</p>
<p class="text-sm opacity-60 group-hover:opacity-80 transition-opacity duration-300">Reactie binnen 24 uur</p>
</div>
<div class="contact-method text-center p-6 group hover-lift">
<div class="method-icon w-16 h-16 bg-primary/20 text-primary rounded-lg flex items-center justify-center text-2xl mx-auto mb-4 group-hover:bg-primary group-hover:text-black transition-all duration-300 transform group-hover:scale-110">
üìÖ
</div>
<h3 class="text-xl font-semibold mb-3 group-hover:text-primary transition-colors duration-300">Ori√´ntatiegesprek</h3>
<p class="opacity-80 mb-2 group-hover:opacity-100 transition-opacity duration-300">Gratis 30-minuten consult</p>
<p class="text-sm opacity-60 group-hover:opacity-80 transition-opacity duration-300">Boek direct via onze agenda</p>
</div>
<div class="contact-method text-center p-6 group hover-lift">
<div class="method-icon w-16 h-16 bg-primary/20 text-primary rounded-lg flex items-center justify-center text-2xl mx-auto mb-4 group-hover:bg-primary group-hover:text-black transition-all duration-300 transform group-hover:scale-110">
üåç
</div>
<h3 class="text-xl font-semibold mb-3 group-hover:text-primary transition-colors duration-300">Gevestigd in Nederland</h3>
<p class="opacity-80 mb-2 group-hover:opacity-100 transition-opacity duration-300">Serveren klanten wereldwijd</p>
<p class="text-sm opacity-60 group-hover:opacity-80 transition-opacity duration-300">Remote-first, resultaatgericht</p>
</div>
</div>
</div>
</section>

<!-- ENHANCED WHAT TO EXPECT with Progressive Animation -->
<section class="what-to-expect-section py-16 px-4 reveal-section">
<div class="max-w-4xl mx-auto">
<div class="text-center mb-12">
<h2 class="font-heading font-bold text-4xl mb-4 gradient-text">Wat Je Kunt Verwachten</h2>
<p class="text-lg opacity-80">Je reis van eerste contact tot resultaten</p>
</div>
<div class="expectations-grid grid md:grid-cols-2 lg:grid-cols-4 gap-8">
<div class="expectation-card text-center group timeline-card" data-step="1">
<div class="step-number w-12 h-12 bg-primary text-black rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">1</div>
<h4 class="font-semibold mb-2 group-hover:text-primary transition-colors duration-300">Snelle Reactie</h4>
<p class="text-sm opacity-80 group-hover:opacity-100 transition-opacity duration-300">We reageren binnen 24 uur met vervolgvragen en vervolgstappen.</p>
</div>
<div class="expectation-card text-center group timeline-card" data-step="2">
<div class="step-number w-12 h-12 bg-primary text-black rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">2</div>
<h4 class="font-semibold mb-2 group-hover:text-primary transition-colors duration-300">Ori√´ntatiegesprek</h4>
<p class="text-sm opacity-80 group-hover:opacity-100 transition-opacity duration-300">30-minuten gesprek om je doelen te begrijpen en te verkennen hoe we kunnen helpen.</p>
</div>
<div class="expectation-card text-center group timeline-card" data-step="3">
<div class="step-number w-12 h-12 bg-primary text-black rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">3</div>
<h4 class="font-semibold mb-2 group-hover:text-primary transition-colors duration-300">Maatvoorstel</h4>
<p class="text-sm opacity-80 group-hover:opacity-100 transition-opacity duration-300">Gedetailleerd voorstel met strategie, tijdlijn en investeringsmogelijkheden.</p>
</div>
<div class="expectation-card text-center group timeline-card" data-step="4">
<div class="step-number w-12 h-12 bg-primary text-black rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">4</div>
<h4 class="font-semibold mb-2 group-hover:text-primary transition-colors duration-300">Partnerschap</h4>
<p class="text-sm opacity-80 group-hover:opacity-100 transition-opacity duration-300">Begin je reis naar meetbare bedrijfsgroei.</p>
</div>
</div>
</div>
</section>

<!-- Continue with other sections... -->

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const formInputs = document.querySelectorAll('.form-input');
    formInputs.forEach((input) => {
      if (!(input instanceof HTMLInputElement) && !(input instanceof HTMLTextAreaElement)) return;

      const container = input.closest('.input-container');
      const underline = container?.querySelector('.input-underline');

      input.addEventListener('focus', () => {
        input.style.borderColor = 'var(--color-primary, #3b82f6)';
        input.style.boxShadow = '0 0 0 3px rgba(59, 130, 246, 0.1)';
        input.style.transform = 'translateY(-2px)';
        if (underline instanceof HTMLElement) {
          underline.style.transform = 'scaleX(1)';
        }
      });

      input.addEventListener('blur', () => {
        input.style.borderColor = '';
        input.style.boxShadow = '';
        input.style.transform = 'translateY(0)';
        if (underline instanceof HTMLElement) {
          underline.style.transform = 'scaleX(0)';
        }
      });

      input.addEventListener('input', () => {
        const label = container?.previousElementSibling?.querySelector('.form-label');
        if (!(label instanceof HTMLElement)) return;

        if (input.value.length > 0) {
          label.style.color = 'var(--color-primary)';
          label.style.transform = 'scale(0.95)';
        } else {
          label.style.color = '';
          label.style.transform = 'scale(1)';
        }
      });
    });

    const form = document.getElementById('contact-form');
    const successMessage = document.getElementById('success-message');
    const submitBtn = document.querySelector('.submit-btn');

    /**
     * @param {string} value
     * @returns {string}
     */
    function sanitizeInput(value: string) {
      
      if (typeof value !== 'string') return '';
      return value
        .trim()
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/javascript:/gi, '')
        .replace(/on\w+\s*=/gi, '')
        .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '')
        .slice(0, 1000);
    }

    /** @returns {void} */
    function clearErrors() {
      document.querySelectorAll('.error-message').forEach((el) => {
        if (el instanceof HTMLElement) {
          el.classList.add('hidden');
          el.textContent = '';
        }
      });
    }

    /**
     * @param {string} id
     * @param {string} message
     * @returns {void}
     */
    function showError(id: string, message: string) {
      const element = document.getElementById(id);
      if (element instanceof HTMLElement) {
        element.textContent = message;
        element.classList.remove('hidden');
      }
    }

    /** @returns {boolean} */
    function validateForm() {
      if (!(form instanceof HTMLFormElement)) return false;

      const controls = {
        name: document.getElementById('name'),
        email: document.getElementById('email'),
        message: document.getElementById('message'),
      };

      if (
        !(controls.name instanceof HTMLInputElement) ||
        !(controls.email instanceof HTMLInputElement) ||
        !(controls.message instanceof HTMLTextAreaElement)
      ) {
        return false;
      }

      clearErrors();

      controls.name.value = sanitizeInput(controls.name.value);
      controls.email.value = controls.email.value.trim();
      controls.message.value = sanitizeInput(controls.message.value);

      let isValid = true;

      if (controls.name.value.length < 2) {
        showError('name-error', 'Naam moet minimaal 2 karakters bevatten');
        isValid = false;
      }

      if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(controls.email.value)) {
        showError('email-error', 'Voer een geldig e-mailadres in');
        isValid = false;
      }

      if (controls.message.value.length < 10) {
        showError('message-error', 'Bericht moet minimaal 10 karakters bevatten');
        isValid = false;
      }

      return isValid;
    }

    if (
      form instanceof HTMLFormElement &&
      successMessage instanceof HTMLElement &&
      submitBtn instanceof HTMLButtonElement
    ) {
      submitBtn.addEventListener('click', () => {
        const ripple = submitBtn.querySelector('.button-ripple');
        if (!(ripple instanceof HTMLElement)) return;

        const rect = submitBtn.getBoundingClientRect();
        const centerX = rect.width / 2;
        const centerY = rect.height / 2;

        ripple.style.left = `${centerX}px`;
        ripple.style.top = `${centerY}px`;
        ripple.style.transform = 'scale(1)';

        setTimeout(() => {
          ripple.style.transform = 'scale(0)';
        }, 600);
      });

      form.addEventListener('submit', async (event) => {
        event.preventDefault();

        if (!validateForm()) return;

        const originalText = submitBtn.textContent;
        submitBtn.innerHTML = `<div class="flex items-center justify-center gap-2">
          <div class="loading-spinner w-4 h-4 border-2 border-black/30 border-t-black rounded-full animate-spin"></div>
          <span>Verzenden...</span>
        </div>`;
        submitBtn.disabled = true;

        try {
          const response = await fetch(form.action, {
            method: 'POST',
            body: new FormData(form),
            headers: { Accept: 'application/json' },
          });

          if (response.ok) {
            form.style.transform = 'scale(0.95)';
            form.style.opacity = '0';

            setTimeout(() => {
              form.classList.add('hidden');
              successMessage.classList.remove('hidden');
              successMessage.style.animation = 'successSlideIn 0.5s ease-out forwards';
            }, 300);
          } else {
            throw new Error('Form submission failed');
          }
        } catch (error) {
          alert('Er is iets misgegaan. Probeer het opnieuw of mail ons direct op contact@veermandev.nl.');
          if (originalText) submitBtn.textContent = originalText;
          submitBtn.disabled = false;
        }
      });
    }

    const observerOptions = {
      root: null,
      rootMargin: '-50px',
      threshold: 0.1,
    };

    const revealObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (!entry.isIntersecting || !(entry.target instanceof HTMLElement)) return;

        const element = entry.target;

        if (element.classList.contains('reveal-title')) {
          element.style.opacity = '1';
          element.style.transform = 'translateY(0)';
        } else if (element.classList.contains('reveal-text')) {
          setTimeout(() => {
            element.style.opacity = '1';
            element.style.transform = 'translateY(0)';
          }, 300);
        } else if (element.classList.contains('reveal-promise')) {
          const promiseItems = element.querySelectorAll('.promise-item');
          promiseItems.forEach((item, itemIndex) => {
            if (!(item instanceof HTMLElement)) return;
            setTimeout(() => {
              item.style.opacity = '1';
              item.style.transform = 'translateY(0)';
            }, 600 + itemIndex * 200);
          });
        }
      });
    }, observerOptions);

    const revealElements = document.querySelectorAll('.reveal-title, .reveal-text, .reveal-promise');
    revealElements.forEach((element) => {
      if (!(element instanceof HTMLElement)) return;
      element.style.opacity = '0';
      element.style.transform = 'translateY(30px)';
      element.style.transition =
        'opacity 0.8s cubic-bezier(0.16, 1, 0.3, 1), transform 0.8s cubic-bezier(0.16, 1, 0.3, 1)';
      revealObserver.observe(element);
    });

    const promiseItems = document.querySelectorAll('.promise-item');
    promiseItems.forEach((item) => {
      if (!(item instanceof HTMLElement)) return;
      item.style.opacity = '0';
      item.style.transform = 'translateY(10px)';
      item.style.transition = 'opacity 0.6s ease-out, transform 0.6s ease-out';
    });

    const codeSymbols = document.querySelectorAll('.code-symbol');
    codeSymbols.forEach((symbol, index) => {
      if (!(symbol instanceof HTMLElement)) return;
      const delay = index * 800;
      const duration = 4000 + Math.random() * 2000;
      symbol.style.animation = `float ${duration}ms ease-in-out infinite ${delay}ms`;
    });

    const timelineCards = document.querySelectorAll('.timeline-card');
    const timelineElements = Array.from(timelineCards).filter(
      (card) => card instanceof HTMLElement
    );

    const timelineObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (!entry.isIntersecting) return;

        timelineElements.forEach((card, index) => {
          setTimeout(() => {
            card.style.opacity = '1';
            card.style.transform = 'translateY(0) scale(1)';
          }, index * 200);
        });
      });
    }, observerOptions);

    if (timelineElements.length > 0) {
      timelineElements.forEach((card) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px) scale(0.9)';
        card.style.transition =
          'opacity 0.8s cubic-bezier(0.16, 1, 0.3, 1), transform 0.8s cubic-bezier(0.16, 1, 0.3, 1)';
      });
      timelineObserver.observe(timelineElements[0]);
    }
  });
</script>

<style>
.gradient-text {
background: linear-gradient(135deg, var(--color-text-light, #1f2937), var(--color-primary, #3b82f6));
-webkit-background-clip: text;
-webkit-text-fill-color: transparent;
background-clip: text;
}

.terminal-cursor {
animation: blink 1s infinite;
color: var(--color-primary);
}

.hover-lift {
transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1), box-shadow 0.3s cubic-bezier(0.16, 1, 0.3, 1);
}

.hover-lift:hover {
transform: translateY(-8px);
box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
}

.pulse-animation {
animation: pulse 2s ease-in-out infinite;
}

.grid-lines {
background-image:
linear-gradient(rgba(59, 130, 246, 0.1) 1px, transparent 1px),
linear-gradient(90deg, rgba(59, 130, 246, 0.1) 1px, transparent 1px);
background-size: 20px 20px;
width: 100%;
height: 100%;
animation: gridMove 20s linear infinite;
}

.calendar-shimmer {
animation: shimmer 3s ease-in-out infinite;
}

@keyframes blink {
0%, 50% { opacity: 1; }
51%, 100% { opacity: 0; }
}

@keyframes pulse {
0%, 100% { transform: scale(1); }
50% { transform: scale(1.05); }
}

@keyframes float {
0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.2; }
25% { transform: translateY(-10px) rotate(90deg); opacity: 0.4; }
50% { transform: translateY(0px) rotate(180deg); opacity: 0.2; }
75% { transform: translateY(10px) rotate(270deg); opacity: 0.3; }
}

@keyframes gridMove {
0% { transform: translate(0, 0); }
100% { transform: translate(20px, 20px); }
}

@keyframes shimmer {
0% { transform: translateX(-100%) skewX(-12deg); }
100% { transform: translateX(200%) skewX(-12deg); }
}

@keyframes successSlideIn {
from {
opacity: 0;
transform: translateY(20px) scale(0.9);
}
to {
opacity: 1;
transform: translateY(0) scale(1);
}
}

.code-symbol {
font-size: 2rem;
font-family: 'Courier New', monospace;
}

.input-underline {
transform-origin: left;
}

.form-label {
transition: color 0.3s ease, transform 0.3s ease;
}

.benefit-item {
opacity: 0;
transform: translateX(-20px);
animation: slideInLeft 0.6s ease-out forwards;
}

.benefit-item:nth-child(1) { animation-delay: 0.5s; }
.benefit-item:nth-child(2) { animation-delay: 0.7s; }
.benefit-item:nth-child(3) { animation-delay: 0.9s; }

@keyframes slideInLeft {
to {
opacity: 1;
transform: translateX(0);
}
}
</style>
</BaseLayout>
