---
// src/components/Header.astro
import LanguageSwitcher from './LanguageSwitcher.astro';
import { getLangFromUrl } from '../i18n/utils';
import { ui } from '../i18n/config';

const lang = getLangFromUrl(Astro.url);
const t = ui[lang];

// Navigation links
const navLinks = [
  { href: `/${lang}/home`, text: t['nav.home'] },
  { href: `/${lang}/about`, text: t['nav.about'] },
  { href: `/${lang}/portfolio`, text: t['nav.portfolio'] },
  { href: `/${lang}/pricing`, text: t['nav.pricing'] },
  { href: `/${lang}/timeline`, text: t['nav.timeline'] },
  { href: `/${lang}/contact`, text: t['nav.contact'] },
];

const currentPath = Astro.url.pathname;
---
<header class="h-20 bg-background-light dark:bg-background-dark sticky top-0 z-50 border-b border-gray-200 dark:border-gray-700">
  <div class="container mx-auto px-6 h-full flex items-center justify-between">
    <!-- Logo -->
    <a href={`/${lang}/home`} class="font-heading text-2xl font-bold text-text-light dark:text-text-dark tracking-wide hover:text-primary transition">
      Veerman<span class="text-primary">Development</span>
    </a>

    <!-- Desktop Navigation -->
    <nav class="hidden md:flex items-center gap-8 h-full">
      {navLinks.map(link => (
        <a
          href={link.href}
          class:list={[
            "text-text-light dark:text-text-dark hover:text-primary transition relative pb-1",
            currentPath === link.href
              ? "font-semibold after:absolute after:left-0 after:bottom-0 after:w-full after:h-0.5 after:bg-primary"
              : ""
          ]}
        >
          {link.text}
        </a>
      ))}

      <!-- Theme toggle (desktop) -->
      <button 
        id="theme-toggler-desktop" 
        type="button" 
        aria-label="Toggle dark mode"
        class="p-2 rounded hover:bg-card-light dark:hover:bg-card-dark transition"
      >
        <span class="dark:hidden">üåô</span>
        <span class="hidden dark:inline">‚òÄÔ∏è</span>
      </button>

      <LanguageSwitcher />
    </nav>

    <!-- Mobile Menu + Theme -->
    <div class="md:hidden flex items-center gap-4 h-full">
      <!-- Theme toggle (mobile) -->
      <button 
        id="theme-toggler-mobile" 
        type="button" 
        aria-label="Toggle dark mode"
        class="p-2 rounded hover:bg-card-light dark:hover:bg-card-dark transition"
      >
        <span class="dark:hidden">üåô</span>
        <span class="hidden dark:inline">‚òÄÔ∏è</span>
      </button>

      <button
        id="mobile-menu-button"
        class="text-text-light dark:text-text-dark focus:outline-none"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        ‚ò∞
      </button>
    </div>
  </div>

  <!-- Mobile Navigation (inside header so it pushes content down when open) -->
  <div id="mobile-menu" class="hidden md:hidden w-full bg-background-light dark:bg-background-dark">
    <nav class="flex flex-col gap-4 px-6 py-4">
      {navLinks.map(link => (
        <a
          href={link.href}
          class:list={[
            "text-text-light dark:text-text-dark hover:text-primary transition",
            currentPath === link.href ? "font-semibold border-l-4 pl-2 border-primary" : ""
          ]}
        >
          {link.text}
        </a>
      ))}
      <LanguageSwitcher />
    </nav>
  </div>

  <!-- Client script (robust, runs after DOM ready) -->
  <script type="module">
    if (typeof window !== 'undefined') {
      const init = () => {
        const menuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        if (menuButton && mobileMenu) {
          menuButton.addEventListener('click', () => {
            const nowHidden = mobileMenu.classList.toggle('hidden');
            menuButton.setAttribute('aria-expanded', String(!nowHidden));
          });
        }

        const togglers = [
          document.getElementById('theme-toggler-desktop'),
          document.getElementById('theme-toggler-mobile'),
        ].filter(Boolean);

        togglers.forEach(btn => {
          btn.addEventListener('click', () => {
            const isDark = document.documentElement.classList.toggle('dark');
            try { localStorage.setItem('theme', isDark ? 'dark' : 'light'); } catch(e) {}
          });
        });
      };

      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
      } else {
        init();
      }
    }
  </script>
</header>