---
interface Props {
  title: string;
  category: string;
  description: string;
  image: string;
  metrics: Array<{text: string, color: string}>;
  link?: string;
}

const { title, category, description, image, metrics } = Astro.props;
---

<div class="project-item group cursor-pointer" data-category={category.toLowerCase().replace(/\s+/g, '-')}>
  <div class="project-card bg-card-light dark:bg-card-dark rounded-xl overflow-hidden shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-2">
    <div class="project-image relative overflow-hidden">
      <img src={image} alt={title} class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-500" />
      <div class="project-overlay absolute inset-0 bg-primary/90 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
        <span class="text-black font-semibold">View Case Study</span>
      </div>
    </div>
    <div class="project-content p-6">
      <h3 class="text-xl font-semibold mb-2">{title}</h3>
      <p class="text-primary font-medium text-sm mb-3">{category}</p>
      <p class="text-sm opacity-80 mb-4">{description}</p>
      <div class="project-metrics flex gap-4 text-xs">
        {metrics.map(metric => (
          <span class={`metric px-2 py-1 rounded ${metric.color}`}>
            {metric.text}
          </span>
        ))}
      </div>
    </div>
  </div>
</div>
