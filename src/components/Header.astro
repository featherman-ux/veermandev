---
import LanguageSwitcher from './LanguageSwitcher.astro';
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Updated navigation to match your exact current file structure
const navLinks = [
  { href: `/${lang}/services`, text: t('nav.services') },        
  { href: `/${lang}/portfolio`, text: t('nav.portfolio') },      
  { href: `/${lang}/process`, text: t('nav.process') },          // New process page
  { href: `/${lang}/contact`, text: t('nav.contact') },
];
const currentPath = Astro.url.pathname;
---

<header class="h-20 bg-background-light dark:bg-background-dark sticky top-0 z-50 border-b border-gray-200 dark:border-gray-700 shadow-sm">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 h-full flex items-center justify-between">
    
    <!-- LOGO: Enhanced with tagline -->
    <div class="flex items-center">
      <a href={`/${lang}/home`} class="font-heading text-2xl font-bold text-text-light dark:text-text-dark tracking-wide hover:text-primary transition group">
        Veerman<span class="text-primary">Development</span>
        <div class="text-xs font-normal opacity-60 group-hover:opacity-80 transition -mt-1">
          Websites Engineered for Growth
        </div>
      </a>
    </div>

    <!-- DESKTOP NAVIGATION -->
    <nav class="hidden lg:flex items-center gap-8 h-full">
      {navLinks.map(link => (
        <a
          href={link.href}
          class:list={[
            "text-text-light dark:text-text-dark hover:text-primary transition-all duration-200 relative pb-1 whitespace-nowrap font-medium",
            currentPath.startsWith(link.href)
              ? "text-primary font-semibold after:absolute after:left-0 after:bottom-0 after:w-full after:h-0.5 after:bg-primary"
              : "hover:after:absolute hover:after:left-0 hover:after:bottom-0 hover:after:w-full hover:after:h-0.5 hover:after:bg-primary/50"
          ]}
        >
          {link.text}
        </a>
      ))}

      <!-- CTA BUTTON -->
      <a
        href={`/${lang}/contact`}
        class="bg-primary text-black font-semibold px-6 py-2.5 rounded-lg hover:bg-primary/90 transition-all transform hover:scale-105 whitespace-nowrap"
      >
        {t('nav.cta')}
      </a>

      <!-- THEME TOGGLE -->
      <button
        id="theme-toggler-desktop"
        type="button"
        aria-label="Toggle dark mode"
        class="p-2 rounded-lg hover:bg-card-light dark:hover:bg-card-dark transition-all"
      >
        <span class="dark:hidden">üåô</span>
        <span class="hidden dark:inline">‚òÄÔ∏è</span>
      </button>

      <!-- LANGUAGE SWITCHER -->
      <LanguageSwitcher />
    </nav>

    <!-- MOBILE MENU BUTTON -->
    <div class="lg:hidden flex items-center gap-4">
      <button
        id="theme-toggler-mobile"
        type="button"
        aria-label="Toggle dark mode"
        class="p-2 rounded-lg hover:bg-card-light dark:hover:bg-card-dark transition-all"
      >
        <span class="dark:hidden">üåô</span>
        <span class="hidden dark:inline">‚òÄÔ∏è</span>
      </button>

      <button
        id="mobile-menu-button"
        class="text-text-light dark:text-text-dark focus:outline-none p-2 hover:bg-card-light dark:hover:bg-card-dark rounded-lg transition-all"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- MOBILE MENU -->
  <div id="mobile-menu" class="hidden lg:hidden bg-background-light dark:bg-background-dark border-t border-gray-200 dark:border-gray-700 shadow-lg">
    <nav class="max-w-7xl mx-auto px-4 sm:px-6 py-6">
      <div class="flex flex-col space-y-4">
        {navLinks.map(link => (
          <a
            href={link.href}
            class:list={[
              "text-text-light dark:text-text-dark hover:text-primary transition-all py-2 px-4 rounded-lg",
              currentPath.startsWith(link.href) 
                ? "font-semibold bg-primary/10 text-primary border-l-4 border-primary" 
                : "hover:bg-card-light dark:hover:bg-card-dark"
            ]}
          >
            {link.text}
          </a>
        ))}
        
        <!-- MOBILE CTA -->
        <a
          href={`/${lang}/contact`}
          class="bg-primary text-black font-semibold px-6 py-3 rounded-lg hover:bg-primary/90 transition-all text-center mt-4"
        >
          {t('nav.cta')}
        </a>
        
        <!-- MOBILE LANGUAGE SWITCHER -->
        <div class="pt-4 border-t border-gray-200 dark:border-gray-700">
          <LanguageSwitcher />
        </div>
      </div>
    </nav>
  </div>

  <script type="module">
    if (typeof window !== 'undefined') {
      const init = () => {
        const menuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        
        if (menuButton && mobileMenu) {
          menuButton.addEventListener('click', () => {
            const isHidden = mobileMenu.classList.contains('hidden');
            
            if (isHidden) {
              mobileMenu.classList.remove('hidden');
              mobileMenu.style.animation = 'slideDown 0.3s ease-out';
              menuButton.setAttribute('aria-expanded', 'true');
            } else {
              mobileMenu.style.animation = 'slideUp 0.3s ease-out';
              setTimeout(() => {
                mobileMenu.classList.add('hidden');
              }, 250);
              menuButton.setAttribute('aria-expanded', 'false');
            }
          });
        }

        // Theme toggle functionality
        const togglers = [
          document.getElementById('theme-toggler-desktop'),
          document.getElementById('theme-toggler-mobile'),
        ].filter(Boolean);
        
        togglers.forEach(btn => {
          btn.addEventListener('click', () => {
            const isDark = document.documentElement.classList.toggle('dark');
            try { 
              localStorage.setItem('theme', isDark ? 'dark' : 'light'); 
            } catch(e) {
              console.warn('localStorage not available');
            }
          });
        });

        // Close mobile menu when clicking outside
        document.addEventListener('click', (e) => {
          if (!menuButton.contains(e.target) && !mobileMenu.contains(e.target)) {
            if (!mobileMenu.classList.contains('hidden')) {
              mobileMenu.classList.add('hidden');
              menuButton.setAttribute('aria-expanded', 'false');
            }
          }
        });
      };

      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
      } else {
        init();
      }
    }
  </script>

  <style>
    @keyframes slideDown {
      from {
        opacity: 0;
        transform: translateY(-10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes slideUp {
      from {
        opacity: 1;
        transform: translateY(0);
      }
      to {
        opacity: 0;
        transform: translateY(-10px);
      }
    }

    /* Smooth hover effects */
    nav a::after {
      transition: all 0.2s ease-out;
    }
  </style>
</header>
