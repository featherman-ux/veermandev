---
interface Props {
  stepNumber: number;
  title: string;
  subtitle: string;
  description: string;
  features: string[];
  image?: string;
  reversed?: boolean;
}

const { stepNumber, title, subtitle, description, features, image, reversed = false } = Astro.props;
---

<div class={`process-step grid lg:grid-cols-2 gap-12 items-center ${reversed ? 'lg:grid-flow-col-reverse' : ''}`}>
  <div class={`step-content ${reversed ? 'lg:order-2' : ''}`}>
    <div class="step-header flex items-center mb-6">
      <div class="step-number w-16 h-16 bg-primary text-black rounded-full flex items-center justify-center text-2xl font-bold mr-4">
        {stepNumber}
      </div>
      <div>
        <h3 class="text-2xl font-semibold">{title}</h3>
        <p class="text-primary font-medium">{subtitle}</p>
      </div>
    </div>
    <p class="text-lg mb-6 opacity-90">
      {description}
    </p>
    <ul class="space-y-3">
      {features.map(feature => (
        <li class="flex items-start gap-3">
          <span class="text-primary">â€¢</span>
          <span>{feature}</span>
        </li>
      ))}
    </ul>
  </div>
  {image && (
    <div class={`step-image ${reversed ? 'lg:order-1' : ''}`}>
      <img src={image} alt={title} class="w-full rounded-lg shadow-lg" />
    </div>
  )}
</div>
