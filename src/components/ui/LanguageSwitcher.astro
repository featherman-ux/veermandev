---
import { languages, routes } from '../../i18n/ui';
import { getLangFromUrl } from '../../i18n/utils';

const { pathname } = Astro.url;
const lang = getLangFromUrl(Astro.url);

// Extract the page route from the current path
const currentRoute = pathname.replace(/^\/[a-z]{2}\//, '').replace(/\/$/, '') || 'home';

// Function to get translated path for target language
function getTranslatedPath(targetLang: string, route: string) {
  const translatedRoute = routes[targetLang as keyof typeof routes]?.[route as keyof typeof routes['en']] || route;
  return `/${targetLang}/${translatedRoute}`;
}
---

<div class="language-switcher">
  {Object.entries(languages).map(([langCode, label]) => (
    <a 
      href={getTranslatedPath(langCode, currentRoute)}
      class:list={[
        "lang-link",
        lang === langCode ? "is-active" : ""
      ]}
      aria-current={lang === langCode ? "page" : undefined}
    >
      {label}
    </a>
  ))}
</div>

<style>
  .language-switcher {
    display: flex;
    gap: 0.5rem;
  }
  
  .lang-link {
    text-decoration: none;
    color: var(--color-text-muted, #6b7280);
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    transition: all 0.2s;
  }
  
  .lang-link:hover {
    background-color: var(--color-primary-light, rgba(59, 130, 246, 0.1));
  }
  
  .lang-link.is-active {
    font-weight: bold;
    color: var(--color-primary, #3b82f6);
    background-color: var(--color-primary-light, rgba(59, 130, 246, 0.1));
  }
</style>
